" emilisto's vimrc
"
" Rightfully stolen/inspired from:
"
"   https://github.com/ryanb/dotfiles/blob/master/vimrc
"   http://stevelosh.com/blog/2010/09/coming-home-to-vim/#using-the-leader
"   https://github.com/rtomayko/dotfiles/blob/rtomayko/.vimrc
"

" let mapleader=","
set autoindent

nmap > :split<cr>
nmap < :vsplit<cr>

" Fugitive shortcuts
nmap <C-g><C-s> :Gstatus<cr>
nmap <C-g><C-d> :Gdiff<cr>
nmap <C-g><C-r> :Gread<cr>
nmap <C-g><C-l> :Glog<cr>

" Emacsy CTRL-E/A naviation in insert mode
imap <C-e> <esc>A
imap <C-a> <esc>I
map <C-e> A
map <C-a> I
imap <C-s> <esc>:w<cr>
map <C-s> :w<cr>

" Create fold from symbol at end of line
" nmap <C-c><C-f> $%zf<cr>
" Create fold from symbol under cusor
nmap <C-c><C-f> v$%zf

nmap yl _v$hy
nmap <C-v><C-l> _v$hP

" Make row center / top
nmap <C-t> zt
nmap <C-r> zz

" Navigate buffers
nmap <C-n> :bnext<cr>
nmap <C-m> :bprev<cr>
map <C-j> :Bclose<cr>

" Rarely use double j anyway
inoremap jj <ESC>

" Reload vimrc
nmap <F3> :so ~/.vimrc.local<cr>

" Press Shift+P while in visual mode to replace the selection without
" overwriting the default register
vmap P p :call setreg('"', getreg('0')) <CR>

" Open URL in browser
command! -bar -nargs=1 OpenURL :!open <args>
function! OpenURL()
  let s:uri = matchstr(getline("."), '[a-z]*:\/\/[^ >,;:]*')
  echo s:uri
  if s:uri != ""
	  exec "!open \"" . s:uri . "\""
  else
	  echo "No URI found in line."
  endif
endfunction
map <Leader>w :call OpenURL()<CR>

" Opens an edit command with the path of the currently edited file filled in
" Normal mode: <Leader>e
map <Leader>e :e <C-R>=expand("%:p:h") . "/" <CR>

"  Strip all trailing whitespace in file
function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction
map ,s :call StripWhitespace ()<CR>

" make file executable
command -nargs=* Xe !chmod +x <args>
command! -nargs=* Xe !chmod +x %

function! MakeExecutableAndReload()
  exec ':Xe'
  " avoid 'reload file' dialog
  exec ':e'
endfunction
map <leader>x :call MakeExecutableAndReload()<cr>

let g:Tex_ViewRule_pdf = 'open'
